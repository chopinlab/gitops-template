# Fluent Bit - 로그 수집 에이전트 (프로덕션)
# 차트: fluent/fluent-bit

# DaemonSet으로 모든 노드에 배포
kind: DaemonSet

# 리소스 설정 (프로덕션)
resources:
  requests:
    memory: "64Mi"
    cpu: "50m" 
  limits:
    memory: "128Mi"
    cpu: "200m"

# Fluent Bit 설정
config:
  service: |
    [SERVICE]
        Daemon Off
        Flush 1
        Log_Level info
        Parsers_File parsers.conf
        Parsers_File custom_parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port 2020
        Health_Check On
        
  inputs: |
    [INPUT]
        Name tail
        Path /var/log/containers/*.log
        multiline.parser docker, cri
        Tag kube.*
        Mem_Buf_Limit 50MB
        Skip_Long_Lines On
        
  filters: |
    [FILTER]
        Name kubernetes
        Match kube.*
        Kube_URL https://kubernetes.default.svc:443
        Kube_CA_File /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix kube.var.log.containers.
        Merge_Log On
        Merge_Log_Key log_processed
        K8S-Logging.Parser On
        K8S-Logging.Exclude Off
        Annotations Off
        Labels On
        
    [FILTER]
        Name nest
        Match kube.*
        Operation lift
        Nested_under kubernetes
        Add_prefix kubernetes_
        
    [FILTER]
        Name modify
        Match kube.*
        Add stream stdout
        Add _msg_key message
        
  outputs: |
    [OUTPUT]
        Name http
        Match kube.*
        Host victoria-logs-single.monitoring.svc.cluster.local
        Port 9428
        URI /insert/jsonline
        Format json_lines
        Json_date_key timestamp
        Json_date_format iso8601
        Retry_Limit 3
        
  customParsers: |
    [PARSER]
        Name docker_no_time
        Format json
        Time_Keep Off
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L

# 볼륨 마운트 (로그 파일 접근)
volumeMounts:
  - name: varlog
    mountPath: /var/log
    readOnly: true
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
  - name: etcmachineid
    mountPath: /etc/machine-id
    readOnly: true
    
volumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers
  - name: etcmachineid
    hostPath:
      path: /etc/machine-id
      type: File

# ServiceAccount 설정
serviceAccount:
  create: true
  
# RBAC 설정  
rbac:
  create: true
  
# 보안 컨텍스트
securityContext:
  privileged: true
  runAsUser: 0

# Tolerations (모든 노드에 배포)
tolerations:
  - effect: NoSchedule
    operator: Exists
  - effect: NoExecute 
    operator: Exists

# 노드 셀렉터 (필요시)
nodeSelector: {}

# Affinity (필요시)
affinity: {}