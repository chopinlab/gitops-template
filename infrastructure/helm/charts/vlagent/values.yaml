# VLAgent - VictoriaLogs 로그 수집 에이전트
# 차트: vm/victoria-logs-agent

# 리소스 설정 (프로덕션)
resources:
  requests:
    memory: "100Mi"
    cpu: "50m"
  limits:
    memory: "200Mi"
    cpu: "200m"

# 로그 전송 대상 (VictoriaLogs)
remoteWrite:
  url: http://victoria-logs-single.monitoring.svc.cluster.local:9428/insert/jsonline

# DaemonSet으로 모든 노드에 배포
daemonSet: true

# 로그 수집 설정
config:
  # 컨테이너 로그 수집
  - input_plugin: "kubernetes"
    kubernetes:
      # Kubernetes API 설정
      api_server: "https://kubernetes.default.svc:443"
      tls_ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
      token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
      
      # 로그 파일 경로
      log_path: "/var/log/containers/*.log"
      
      # 파서 설정
      parser: "docker"
      
      # 메타데이터 추가
      annotations: true
      labels: true
      
    # 필터링 및 가공
    filters:
      # Kubernetes 메타데이터 추가
      - plugin: "kubernetes_metadata"
        config:
          merge_log: true
          preserve_original_log: false
          
      # 불필요한 로그 제외
      - plugin: "grep"
        config:
          exclude: |
            kubernetes_namespace_name kube-system
            kubernetes_namespace_name kube-public
            kubernetes_namespace_name kube-node-lease
            
    # 출력 설정
    output:
      plugin: "victoria_logs"
      config:
        url: "http://victoria-logs-single.monitoring.svc.cluster.local:9428/insert/jsonline"
        format: "json"
        timeout: "10s"
        retry_limit: 3

  # 시스템 로그 수집 (선택사항)
  - input_plugin: "systemd"
    systemd:
      units:
        - "kubelet.service"
        - "docker.service" 
        - "containerd.service"
        
    filters:
      - plugin: "modify"
        config:
          add:
            source: "systemd"
            
    output:
      plugin: "victoria_logs"
      config:
        url: "http://victoria-logs-single.monitoring.svc.cluster.local:9428/insert/jsonline"
        format: "json"
        timeout: "10s"
        retry_limit: 3

# 볼륨 마운트 설정
volumeMounts:
  - name: varlog
    mountPath: /var/log
    readOnly: true
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
  - name: etcmachineid
    mountPath: /etc/machine-id
    readOnly: true

volumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers  
    hostPath:
      path: /var/lib/docker/containers
  - name: etcmachineid
    hostPath:
      path: /etc/machine-id
      type: File

# ServiceAccount 권한 설정
rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["pods", "nodes", "namespaces"]
      verbs: ["get", "list", "watch"]
    - apiGroups: [""]
      resources: ["pods/log"]
      verbs: ["get"]

serviceAccount:
  create: true
  name: ""

# 서비스 설정 (메트릭 노출용)
service:
  enabled: true
  type: ClusterIP
  port: 8427
  targetPort: 8427

# 보안 설정
securityContext:
  privileged: true  # 호스트 로그 파일 접근 필요
  runAsUser: 0

# 노드 셀렉터 (필요시)
nodeSelector: {}

# Tolerations (모든 노드에 배포)
tolerations:
  - effect: NoSchedule
    operator: Exists
  - effect: NoExecute
    operator: Exists

# Pod Anti-Affinity (필요시)
affinity: {}

# 환경변수
env:
  - name: NODE_NAME
    valueFrom:
      fieldRef:
        fieldPath: spec.nodeName
  - name: POD_NAME
    valueFrom:
      fieldRef:
        fieldPath: metadata.name
  - name: POD_NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace